# Test playbook
---
- hosts: localhost
  connection: local
  gather_facts: false

  vars:
      # connection
      oracle_home: /opt/oracle/instantclient_12_2
      hostname: 192.168.1.76
      service_name: db12c.el5.localdomain
      user: test
      password: test
      oracle_env:
             ORACLE_HOME: "{{ oracle_home }}"
             LD_LIBRARY_PATH: "{{ oracle_home }}"
             TNS_ADMIN: "{{ oracle_home }}"

      # queries
      threshold_free_pct: 10
      sql_list_tablespaces_less_pct: "select df.tablespace_name \"Tablespace\",
       totalusedspace \"Used MB\",
       (df.totalspace - tu.totalusedspace) \"Free MB\",
       df.totalspace \"Total MB\",
       round(100 * ( (df.totalspace - tu.totalusedspace)/ df.totalspace)) \"Pct. Free\"
  from (select tablespace_name,
               round(sum(bytes) / 1048576) TotalSpace
          from dba_data_files
         group by tablespace_name) df,
       (select round(sum(bytes)/(1024*1024)) totalusedspace,
               tablespace_name
          from dba_segments
         group by tablespace_name) tu
 where df.tablespace_name = tu.tablespace_name
   and df.totalspace <> 0
   and round(100 * ( (df.totalspace - tu.totalusedspace)/ df.totalspace)) <= {{ threshold_free_pct }};" # Less than X % of free space

      sql_list_all_tablespaces_utilization: "select tbs, sum(total) total, sum(free) free, max(maximum) maximum, trunc(((sum(total)-sum(free))/decode(sum(total),0,1,sum(total)))*100,2) used
      from (select tablespace_name tbs, sum(bytes)/1024/1024  total, 0 free, 0 maximum
              from dba_data_files
              where tablespace_name not like '%TEMP%'
                and tablespace_name not like '%UNDO%'
                and tablespace_name not like '%_ARC'
                and tablespace_name not like '%_PMDM'
                and tablespace_name not like 'TRDM_200%'
                and tablespace_name not in ('TRDM_2007_D_U32M',        'TRDM_IDX_U256K_PMDM',     'TRDM_U4M_PMDM',
                                            'VISION_MD_2001_U32M_ARC', 'VISION_MD_2002_U32M_ARC', 'VISION_MD_2002_U4M_ARC',
                                            'VISION_MD_2004_U32M_ARC', 'VISION_MD_2004_U4M_ARC',  'VISION_MD_2006_U32M_ARC',
                                            'VISION_MD_2007_U32M_ARC','MINERVA_DATA_DYNAMIC_01','TRDM_2010_D_16K_U32M','TRDM_DATA_2007')
              group by tablespace_name
            UNION ALL
            select tablespace_name tbs, 0 total, sum(bytes)/1024/1024 free, max(bytes)/1024/1024 maximum
              from dba_free_space
              where tablespace_name not like '%TEMP%'
                and tablespace_name not like '%UNDO%'
                and tablespace_name not like '%_ARC'
                and tablespace_name not like '%_PMDM'
                and tablespace_name not like 'TRDM_200%'
                and tablespace_name not in ('TRDM_2007_D_U32M',        'TRDM_IDX_U256K_PMDM',     'TRDM_U4M_PMDM',
                                            'VISION_MD_2001_U32M_ARC', 'VISION_MD_2002_U32M_ARC', 'VISION_MD_2002_U4M_ARC',
                                            'VISION_MD_2004_U32M_ARC', 'VISION_MD_2004_U4M_ARC',  'VISION_MD_2006_U32M_ARC',
                                            'VISION_MD_2007_U32M_ARC','MINERVA_DATA_DYNAMIC_01','TRDM_2010_D_16K_U32M','TRDM_DATA_2007')
              group by tablespace_name)
   group by tbs
   order by 2 desc;"

  tasks:

  - name: List tablespaces with less than "{{ threshold_free_pct }} %" of free space
    oracle_sql: hostname={{ hostname }} service_name={{ service_name }} user={{ user }} password={{ password }} sql="{{ sql_list_tablespaces_less_pct }}"
    environment: "{{ oracle_env }}"
    register: result

  - debug:
      msg: "Table space having less than 10 % of free space: {{ item.0 }}"
      #var: item.0
    #register: tbs
    with_items:
      - "{{ result.msg }}"

  - name: List all tablespaces utilization
    oracle_sql: hostname={{ hostname }} service_name={{ service_name }} user={{ user }} password={{ password }} sql="{{ sql_list_all_tablespaces_utilization }}"
    environment: "{{ oracle_env }}"
    register: result

  - debug:
      msg: "Tablespace analyzed: {{ item.0 }}"
    with_items:
      - "{{ result.msg }}"

  #- name: Execute a script
  #  oracle_sql: hostname={{ hostname }} service_name={{ service_name }} user={{ user }} password={{ password }} script=/etc/opt/csw/ansible/playbooks/simple_select_script.sql
  #  environment: "{{ oracle_env }}"
  #  register: result

  #- debug:
  #    var: result
